{"version":3,"sources":["connector/connector.js","components/style.js","constant/action-types.js","actions/index.js","components/TokenAddressInput.js","constant/index.js","hooks/index.js","components/TokenBalance.js","components/LiquidityInfo.js","components/Account.js","components/Swap.js","components/AddLiquidity.js","components/RemoveLiquidity.js","components/Main.js","components/Column.js","App.js","reducers/index.js","store/index.js","library/library.js","index.js"],"names":["injectedConnector","InjectedConnector","supportedChainIds","Wrap","styled","div","BorderWrap","Text","HeaderText","UPDATE_TOKEN_A","UPDATE_TOKEN_B","UPDATE_LP","UPDATE_SWAP_INPUT","UPDATE_SWAP_OUTPUT","UPDATE_SWAP_EXPECT","UPDATE_ADD_INPUT","UPDATE_ADD_INPUT_2","UPDATE_TOKEN_A_ADDRESS","UPDATE_TOKEN_B_ADDRESS","updateTokenA","tokenABalance","type","updateTokenB","tokenBBalance","updateSwapInput","swapInput","updateSwapExpect","swapExpect","updateAddInput","addInput","updateAddInput2","addInput2","updateTokenAAddress","tokenAAddress","updateTokenBAddress","tokenBAddress","TokenAddressInput","dispatch","useDispatch","chainId","useWeb3React","onChange","e","target","value","length","ethers","utils","getAddress","WETH","address","ROUTER_ADDRESS","ROUTER_ABI","ERC20_ABI","useTokenAddress","useSelector","state","useTokenBalance","LPBalance","useTokenContract","library","tokenAContract","undefined","Contract","tokenBContract","usePairContract","tokenA","Token","tokenB","tokens","sortsBefore","pair","getCreate2Address","FACTORY_ADDRESS","keccak256","pack","INIT_CODE_HASH","pairTokenContract","useRouterContract","account","signer","getSigner","connectUnchecked","routerContract","TokenBalance","useState","ADecimals","setADecimals","BDecimals","setBDecimals","decimals","then","result","useTokenDecimals","balanceOf","formatUnits","getBalance","formatEther","updateLP","LiquidityInfo","total","setTotal","totalSupply","ratio","ratioFixed","toFixed","Account","style","color","marginTop","marginBottom","Swap","pending","setPending","approvedA","setApprovedA","approvedB","setApprovedB","input","expect","amountIn","parseEther","path","to","deadline","Math","floor","Date","now","approveA","approve","MaxUint256","wait","approveB","eq","getAmountsOut","gasLimit","allowance","onClick","swapExactTokensForTokens","hexlify","gasPrice","parseUnits","swapExactETHForTokens","border","AddLiquidityButton","input2","amountTokenDesired","addLiquidityETH","addLiquidity","RemoveLiquidityButton","approved","setApproved","liquidity","removeLiquidityETH","removeLiquidity","Main","activate","contentList","tab","content","AddLiquidity","RemoveLiquidity","initialTabs","index","setIndex","contentItem","contentChange","useTabs","fontSize","gap","width","display","flexDirection","alignItems","map","section","flexGrow","Column","AutoColumn","justify","App","initialState","swapOutput","rootReducer","action","store","createStore","composeWithDevTools","getLibrary","provider","Web3Provider","pollingInterval","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4349ba17.chunk.js","sourcesContent":["import { InjectedConnector } from \"@web3-react/injected-connector\";\n\nexport const injectedConnector = new InjectedConnector({\n    supportedChainIds: [\n        1, // Mainet\n        3, // Ropsten\n        4, // Rinkeby\n        5, // Goerli\n        42, // Kovan\n    ],\n})","import styled from \"styled-components\";\n\nexport const Wrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: normal;\n  align-items: center;\n`\n\nexport const BorderWrap = styled.div`\n  margin-top: 10px;\n  display: flex;\n  flex-direction: column;\n  gap: normal;\n  align-items: center;\n  border: 2px solid;\n  width: 100%;\n  border-radius: 8px;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nexport const Text = styled.div`\n  text-align: center;\n  font-size: 13px;\n`\n\nexport const HeaderText = styled.div`\n  text-align: center;\n  font-size: 17px;\n  margin-bottom: 5px;\n  font-weight: 500;\n`\n","export const UPDATE_TOKEN_A = \"UPDATE_TOKEN_A\"\nexport const UPDATE_TOKEN_B = \"UPDATE_TOKEN_B\"\nexport const UPDATE_LP = \"UPDATE_LP\"\nexport const UPDATE_SWAP_INPUT = \"UPDATE_SWAP_INPUT\"\nexport const UPDATE_SWAP_OUTPUT = \"UPDATE_SWAP_OUTPUT\"\nexport const UPDATE_SWAP_EXPECT = \"UPDATE_SWAP_EXPECT\"\nexport const UPDATE_ADD_INPUT = 'UPDATE_ADD_INPUT'\nexport const UPDATE_ADD_INPUT_2 = 'UPDATE_ADD_INPUT_2'\nexport const UPDATE_TOKEN_A_ADDRESS = \"UPDATE_TOKEN_A_ADDRESS\"\nexport const UPDATE_TOKEN_B_ADDRESS = \"UPDATE_TOKEN_B_ADDRESS\"","import {\n    UPDATE_TOKEN_B,\n    UPDATE_TOKEN_A,\n    UPDATE_LP,\n    UPDATE_SWAP_INPUT,\n    UPDATE_SWAP_OUTPUT,\n    UPDATE_SWAP_EXPECT,\n    UPDATE_ADD_INPUT,\n    UPDATE_ADD_INPUT_2,\n    UPDATE_TOKEN_A_ADDRESS, UPDATE_TOKEN_B_ADDRESS\n} from \"../constant/action-types\";\n\nexport const updateTokenA = tokenABalance => ({\n    type: UPDATE_TOKEN_A,\n    tokenABalance: tokenABalance\n})\n\nexport const updateTokenB = tokenBBalance => ({\n    type: UPDATE_TOKEN_B,\n    tokenBBalance: tokenBBalance\n})\n\nexport const updateLP = LPBalance => ({\n    type: UPDATE_LP,\n    LPBalance: LPBalance\n})\n\nexport const updateSwapInput = swapInput => ({\n    type: UPDATE_SWAP_INPUT,\n    swapInput: swapInput\n})\n\nexport const updateSwapOutput = swapOutput => ({\n    type: UPDATE_SWAP_OUTPUT,\n    swapOutput: swapOutput\n})\n\nexport const updateSwapExpect = swapExpect => ({\n    type: UPDATE_SWAP_EXPECT,\n    swapExpect: swapExpect\n})\n\nexport const updateAddInput = addInput => ({\n    type: UPDATE_ADD_INPUT,\n    addInput: addInput\n})\n\nexport const updateAddInput2 = addInput2 => ({\n    type: UPDATE_ADD_INPUT_2,\n    addInput2: addInput2\n})\n\nexport const updateTokenAAddress = tokenAAddress => ({\n    type: UPDATE_TOKEN_A_ADDRESS,\n    tokenAAddress: tokenAAddress\n})\n\nexport const updateTokenBAddress = tokenBAddress => ({\n    type: UPDATE_TOKEN_B_ADDRESS,\n    tokenBAddress: tokenBAddress\n})","import {useDispatch} from \"react-redux\";\nimport {Text} from \"./style\";\nimport React from \"react\";\nimport { updateTokenAAddress, updateTokenBAddress} from \"../actions\";\nimport {useWeb3React} from \"@web3-react/core\";\nimport {ethers} from \"ethers\";\nimport {WETH} from \"@uniswap/sdk\";\n\nfunction TokenAddressInput() {\n    const dispatch = useDispatch()\n    const {chainId} = useWeb3React()\n\n    function tokenAOnChange(e){\n        if(e.target.value.length !== 0){\n            try {\n                ethers.utils.getAddress(e.target.value)\n                dispatch(updateTokenAAddress(e.target.value))\n            } catch {\n                if(e.target.value === \"eth\")\n                    dispatch(updateTokenAAddress(WETH[chainId].address))\n            }\n        }\n    }\n\n    function tokenBOnChange(e){\n        if(e.target.value.length !== 0){\n            try {\n                ethers.utils.getAddress(e.target.value)\n                dispatch(updateTokenBAddress(e.target.value))\n            } catch {\n                if(e.target.value === \"eth\")\n                    dispatch(updateTokenBAddress(WETH[chainId].address))\n            }\n        }\n    }\n\n    return(\n        <>\n            <form>\n                <label>\n                    <Text>\n                        토큰 A 주소 :\n                        <input type=\"text\" onChange={tokenAOnChange}/>\n                    </Text>\n                </label>\n            </form>\n            <form>\n                <label>\n                    <Text>\n                        토큰 B 주소 :\n                        <input type=\"text\" onChange={tokenBOnChange}/>\n                    </Text>\n                </label>\n            </form>\n        </>\n    )\n}\n\nexport default TokenAddressInput","export const ROUTER_ADDRESS = '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\nexport const ROUTER_ABI = [\n    'function getAmountsOut(uint amountIn, address[] memory path) public view returns (uint[] memory amounts)',\n    'function swapExactTokensForTokens(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts)',\n    'function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline) external payable returns (uint[] memory amounts)',\n    'function addLiquidity(address tokenA, address tokenB, uint amountADesired, uint amountBDesired, uint amountAMin, uint amountBMin, address to, uint deadline) external returns (uint amountA, uint amountB, uint liquidity)',\n    'function addLiquidityETH(address token, uint amountTokenDesired, uint amountTokenMin, uint amountETHMin,address to,uint deadline) external payable returns (uint amountToken, uint amountETH, uint liquidity)',\n    'function removeLiquidity(address tokenA, address tokenB, uint liquidity, uint amountAMin, uint amountBMin, address to, uint deadline) external returns (uint amountA, uint amountB)',\n    'function removeLiquidityETH(address token,uint liquidity, uint amountTokenMin,uint amountETHMin,address to, uint deadline) external returns (uint amountToken, uint amountETH)'\n]\nexport const ERC20_ABI = [\n    'function balanceOf(address account) external view returns (uint)',\n    'function totalSupply() external view returns (uint)',\n    'function approve(address spender, uint rawAmount) external returns (bool)',\n    'function allowance(address owner, address spender) public view returns (uint256)',\n    'function decimals() public view returns (uint8)'\n]\n\n","import {useState} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {FACTORY_ADDRESS, INIT_CODE_HASH, Token, WETH} from \"@uniswap/sdk\";\nimport {ethers} from \"ethers\";\nimport {ERC20_ABI, ROUTER_ABI, ROUTER_ADDRESS} from \"../constant\";\nimport {useWeb3React} from \"@web3-react/core\";\nimport {getCreate2Address} from \"@ethersproject/address\";\nimport {keccak256, pack} from \"@ethersproject/solidity\";\n\nexport const useTabs = (initialTabs, contentList) => {\n    const [index, setIndex] = useState(initialTabs)\n\n    return {\n        contentItem: contentList[index],\n        contentChange: setIndex\n    }\n}\n\nexport const useTokenAddress = () => {\n    const tokenAAddress = useSelector(state => state?.tokenAAddress)\n    const tokenBAddress = useSelector(state => state?.tokenBAddress)\n\n    return { tokenAAddress, tokenBAddress }\n}\n\nexport const useAddLiquidityInput = () => {\n    const input = useSelector(state => state?.addInput)\n    const input2 = useSelector(state => state?.addInput2)\n\n    return { input, input2 }\n}\n\nexport const useTokenBalance = () => {\n    const tokenABalance = useSelector((state) => state?.tokenABalance )\n    const tokenBBalance = useSelector((state) => state?.tokenBBalance )\n    const LPBalance = useSelector((state) => state?.LPBalance )\n\n    return { tokenABalance, tokenBBalance, LPBalance }\n}\n\nexport const useTokenContract = () => {\n    const {tokenAAddress, tokenBAddress} = useTokenAddress()\n    const {chainId, library} = useWeb3React()\n    const tokenAContract = tokenAAddress === WETH[chainId].address ? undefined : new ethers.Contract(tokenAAddress, ERC20_ABI, library)\n    const tokenBContract = tokenBAddress === WETH[chainId].address ? undefined : new ethers.Contract(tokenBAddress, ERC20_ABI, library)\n\n    return { tokenAContract, tokenBContract }\n}\n\nexport const useTokenDecimals = () => {\n    const {tokenAContract, tokenBContract} = useTokenContract()\n\n    const [ADecimals,setADecimals] = useState(0)\n    const [BDecimals,setBDecimals] = useState(0)\n\n    tokenAContract?.decimals()\n        .then(result => {\n            if(ADecimals !== result)\n                setADecimals(result)\n        })\n\n    tokenBContract?.decimals()\n        .then(result => {\n            if(BDecimals !== result)\n                setBDecimals(result)\n        })\n\n    return { ADecimals, BDecimals }\n}\n\nexport const usePairContract = () => {\n    const { chainId, library } = useWeb3React()\n    const { tokenAAddress, tokenBAddress } = useTokenAddress()\n    const { tokenAContract, tokenBContract } = useTokenContract()\n\n    const tokenA = tokenAContract === undefined ? new Token(chainId, WETH[chainId].address, 18) : new Token(chainId, tokenAAddress, 18)\n    const tokenB = tokenBContract === undefined ? new Token(chainId, WETH[chainId].address, 18) : new Token(chainId, tokenBAddress, 18)\n\n    const tokens = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n    const pair = getCreate2Address(\n        FACTORY_ADDRESS,\n        keccak256(['bytes'], [pack(['address', 'address'], [tokens[0].address, tokens[1].address])]),\n        INIT_CODE_HASH\n    )\n\n    const pairTokenContract = new ethers.Contract(pair, ERC20_ABI, library)\n\n    return { pairTokenContract }\n}\n\nexport const useSwapInput = () => {\n    const input = useSelector(state => state?.swapInput)\n    const expect = useSelector(state => state?.swapExpect)\n\n    return { input, expect }\n}\n\nexport const useRouterContract = () => {\n    const { account, library } = useWeb3React()\n    const signer = library.getSigner(account).connectUnchecked()\n    const routerContract = new ethers.Contract(ROUTER_ADDRESS, ROUTER_ABI, signer) // create contract instance\n\n    return { routerContract }\n\n}","import {BorderWrap, HeaderText, Text} from \"./style\";\nimport React from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {useWeb3React} from \"@web3-react/core\";\nimport {ethers} from \"ethers\";\nimport {WETH} from \"@uniswap/sdk\";\nimport {updateTokenA, updateLP, updateTokenB} from \"../actions\";\nimport {usePairContract, useTokenAddress, useTokenBalance, useTokenContract, useTokenDecimals} from \"../hooks\";\n\nfunction TokenBalance() {\n    const dispatch = useDispatch()\n\n    const { chainId, account, library } = useWeb3React()\n    const { tokenABalance, tokenBBalance, LPBalance } = useTokenBalance()\n    const { tokenAAddress, tokenBAddress } = useTokenAddress()\n    const { ADecimals, BDecimals } = useTokenDecimals()\n    const { tokenAContract, tokenBContract } = useTokenContract()\n    const { pairTokenContract } = usePairContract()\n\n    if(tokenAAddress !== WETH[chainId].address)\n        tokenAContract.balanceOf(account)\n            .then((result) => dispatch(updateTokenA(ethers.utils.formatUnits(result,ADecimals))))\n    else\n        library.getBalance(account)\n            .then((result) => dispatch(updateTokenA(ethers.utils.formatEther(result))))\n\n    if(tokenBAddress !== WETH[chainId].address)\n        tokenBContract.balanceOf(account)\n            .then((result) => dispatch(updateTokenB(ethers.utils.formatUnits(result,BDecimals))))\n    else\n        library.getBalance(account)\n            .then((result) => dispatch(updateTokenB(ethers.utils.formatEther(result))))\n\n    pairTokenContract?.balanceOf(account)\n        .then((result) => {\n            if(ethers.utils.formatEther(result) !== LPBalance)\n                dispatch(updateLP(ethers.utils.formatEther(result)))\n        })\n\n    return (\n        <BorderWrap>\n            <HeaderText>잔액 정보</HeaderText>\n            <Text>토큰 A 잔액: {tokenABalance}</Text>\n            <Text>토큰 B 잔액: {tokenBBalance}</Text>\n            <Text>유동성 토큰 잔액 : {LPBalance}</Text>\n        </BorderWrap>\n    )\n}\n\nexport default TokenBalance","import React, {useState} from \"react\";\nimport {BorderWrap, HeaderText, Text} from \"./style\";\nimport {ethers} from \"ethers\";\nimport {usePairContract, useTokenBalance} from \"../hooks\";\n\nfunction LiquidityInfo() {\n    const { LPBalance } = useTokenBalance()\n    const { pairTokenContract } = usePairContract()\n\n    const [total, setTotal] = useState(0)\n\n    pairTokenContract.totalSupply()\n        .then(result => {\n            if(ethers.utils.formatEther(result) !== total)\n                setTotal(ethers.utils.formatEther(result))\n        })\n\n    const ratio = LPBalance / total * 100\n    const ratioFixed = ratio >= 0.01 ? ratio.toFixed(2) : \"less than 0.01\"\n\n    return(\n        <BorderWrap>\n            <HeaderText>Pool 정보</HeaderText>\n            <Text>유동성 보유 비율  : {ratioFixed}%</Text>\n        </BorderWrap>\n    )\n}\n\nexport default LiquidityInfo","import {Text, Wrap} from \"./style\";\nimport React from \"react\";\nimport {useWeb3React} from \"@web3-react/core\";\nimport TokenAddressInput from \"./TokenAddressInput\";\nimport TokenBalance from \"./TokenBalance\";\nimport LiquidityInfo from \"./LiquidityInfo\";\nimport {useTokenAddress} from \"../hooks\";\n\nfunction Account() {\n    const { chainId, account } = useWeb3React()\n    const { tokenAAddress, tokenBAddress } = useTokenAddress()\n\n    return (\n        <Wrap>\n            <Text style={{color:'green'}}>Connected </Text>\n            <Text style={{marginTop:'15px'}}>ChainId: {chainId}</Text>\n            <Text style={{marginBottom:'15px'}}>Account: {account}</Text>\n            <TokenAddressInput/>\n            { tokenAAddress === \"\" || tokenBAddress === \"\" ? (\n                <></>\n            ) : (\n                <>\n                    <TokenBalance/>\n                    <LiquidityInfo/>\n                </>\n            ) }\n        </Wrap>\n    )\n}\n\nexport default Account","import React, {useState} from \"react\";\nimport {useWeb3React} from \"@web3-react/core\";\nimport { ethers } from 'ethers'\nimport {Pair, WETH} from \"@uniswap/sdk\"\nimport {ROUTER_ADDRESS} from \"../constant\";\nimport {updateTokenA, updateSwapExpect, updateSwapInput, updateTokenB} from \"../actions\";\nimport {useDispatch} from \"react-redux\";\nimport {BorderWrap, HeaderText, Text} from \"./style\";\nimport {MaxUint256} from \"@ethersproject/constants\";\nimport {useRouterContract, useSwapInput, useTokenAddress, useTokenContract} from \"../hooks\";\n\n\nfunction Swap() {\n    const { chainId, account, library } = useWeb3React()\n\n    const [pending, setPending] = useState(false)\n    const [approvedA, setApprovedA] = useState(false)\n    const [approvedB, setApprovedB] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const { input, expect } = useSwapInput()\n    const { tokenAAddress, tokenBAddress } = useTokenAddress()\n    const { tokenAContract, tokenBContract } = useTokenContract()\n    const { routerContract } = useRouterContract()\n\n    const amountIn = input !== undefined ? ethers.utils.parseEther(input) : undefined\n    const path = [tokenAAddress, tokenBAddress]\n    const amountOutMin = '0'\n    const to = account // Send to myself\n    const deadline = Math.floor(Date.now() / 1000) + 60 * 20 // 20 minutes from the current Unix time\n\n    if(amountIn !== undefined && !amountIn.eq(0)){\n        routerContract.getAmountsOut(amountIn, path, {gasLimit:10000000})\n            .then((result)=>{\n                dispatch(updateSwapExpect(ethers.utils.formatEther(result[1])))\n            })\n    } else {\n        dispatch(updateSwapExpect('0'))\n    }\n\n    if(tokenAContract !== undefined)\n        tokenAContract.allowance(account, ROUTER_ADDRESS)\n            .then(result => {\n                if( ethers.utils.formatEther(result) >= ethers.utils.formatEther(MaxUint256.div(100)))\n                    !approvedA && setApprovedA(true)\n            })\n    else\n        !approvedA && setApprovedA(true)\n\n    if(tokenBContract !== undefined)\n        tokenBContract.allowance(account, ROUTER_ADDRESS)\n            .then(result => {\n                if( ethers.utils.formatEther(result) >= ethers.utils.formatEther(MaxUint256.div(100)))\n                    !approvedB && setApprovedB(true)\n            })\n    else\n        !approvedB && setApprovedB(true)\n\n    function approveA() {\n        tokenAContract.approve(ROUTER_ADDRESS, MaxUint256)\n            .then((result) => {\n                setPending(true)\n                result.wait().then(() => {\n                    setPending(false)\n                    setApprovedA(true)\n                })\n            })\n    }\n\n    function approveB() {\n        tokenBContract.approve(ROUTER_ADDRESS, MaxUint256)\n            .then((result) => {\n                setPending(true)\n                result.wait().then(() => {\n                    setPending(false)\n                    setApprovedB(true)\n                })\n            })\n    }\n\n    function swapExactTokensForTokens(): Promise<Pair> {\n        routerContract.swapExactTokensForTokens(amountIn, amountOutMin, path, to, deadline, {gasLimit: ethers.utils.hexlify(250000), gasPrice: ethers.utils.parseUnits('5', \"gwei\")})\n            .then( (result) => {\n                setPending(true)\n                result.wait().then( () => {\n                    library.getBalance(account)\n                        .then((result) => dispatch(updateTokenA(ethers.utils.formatEther(result))))\n                    library.getBalance(account)\n                        .then((result) => dispatch(updateTokenB(ethers.utils.formatEther(result))))\n                    setPending(false)\n                    dispatch(updateSwapInput('0'))\n                })\n            })\n    }\n\n    function swapExactETHForTokens(): Promise<Pair> {\n        routerContract.swapExactETHForTokens(amountOutMin, path, to, deadline, {value: amountIn, gasLimit: ethers.utils.hexlify(250000), gasPrice: ethers.utils.parseUnits('5', \"gwei\") })\n            .then( (result) => {\n                setPending(true)\n                result.wait().then( () => {\n                    if(tokenAAddress !== WETH[chainId].address)\n                        tokenAContract.balanceOf(account)\n                            .then((result) => dispatch(updateTokenA(ethers.utils.formatEther(result))))\n                    else\n                        library.getBalance(account)\n                            .then((result) => dispatch(updateTokenA(ethers.utils.formatEther(result))))\n\n                    if(tokenBAddress !== WETH[chainId].address)\n                        tokenBContract.balanceOf(account)\n                            .then((result) => dispatch(updateTokenB(ethers.utils.formatEther(result))))\n                    else\n                        library.getBalance(account)\n                            .then((result) => dispatch(updateTokenB(ethers.utils.formatEther(result))))\n                    setPending(false)\n                    dispatch(updateSwapInput('0'))\n                })\n            })\n    }\n\n    const onClick = tokenAContract !== undefined && tokenBContract !== undefined ?  swapExactTokensForTokens : swapExactETHForTokens\n\n    function inputOnChange(e){\n        if(e.target.value.length !== 0)\n            dispatch(updateSwapInput(e.target.value))\n        else\n            dispatch(updateSwapInput('0'))\n    }\n\n    return (\n        <BorderWrap style={{marginTop:\"10px\", border:\"2px solid\"}}>\n            <HeaderText>\n                스왑\n            </HeaderText>\n            { !pending ? (\n                <>\n                    <form>\n                        <label>\n                            <Text>\n                                Input :\n                                <input type=\"text\" onChange={inputOnChange}/>\n                            </Text>\n                        </label>\n                    </form>\n                    <Text>\n                        Output : {expect}\n                    </Text>\n                    { approvedA && approvedB ? (\n                        <button style={{color:\"green\"}} type=\"button\" onClick={onClick}>\n                            Swap\n                        </button>\n                    ):(\n                        approvedA ?\n                            <button style={{color:\"red\"}} type=\"button\" onClick={approveB}>\n                                Approve B\n                            </button>\n                            : approvedB ?\n                            <button style={{color:\"red\"}} type=\"button\" onClick={approveA}>\n                                Approve A\n                            </button> :\n                            <>\n                                <button style={{color:\"red\"}} type=\"button\" onClick={approveA}>\n                                    Approve A\n                                </button>\n                                <button style={{color:\"red\"}} type=\"button\" onClick={approveB}>\n                                Approve B\n                                </button>\n                            </>\n                        )\n                    }\n                </>\n            ) : (\n                <Text>\n                    Pending...\n                </Text>\n            )}\n        </BorderWrap>\n    )\n}\n\nexport default Swap\n\n","import React, {useState} from \"react\";\nimport {useWeb3React} from \"@web3-react/core\";\nimport { ethers } from 'ethers'\nimport {Pair} from \"@uniswap/sdk\"\nimport {ROUTER_ADDRESS} from \"../constant\";\nimport { updateAddInput, updateAddInput2, updateTokenA, updateTokenB} from \"../actions\";\nimport {useDispatch} from \"react-redux\";\nimport {BorderWrap, HeaderText, Text} from \"./style\";\nimport {MaxUint256} from '@ethersproject/constants'\nimport {useAddLiquidityInput, useRouterContract, useTokenAddress, useTokenContract} from \"../hooks\";\n\nfunction AddLiquidityButton() {\n    const dispatch = useDispatch()\n\n    const { account, library } = useWeb3React()\n    const { tokenAAddress, tokenBAddress } = useTokenAddress()\n    const { input, input2 } = useAddLiquidityInput()\n    const { tokenAContract, tokenBContract } = useTokenContract()\n    const { routerContract } = useRouterContract()\n\n    const [approvedA, setApprovedA] = useState(false)\n    const [approvedB, setApprovedB] = useState(false)\n    const [pending, setPending] = useState(false)\n\n    const amountIn = input !== undefined ? ethers.utils.parseEther(input) : undefined\n    const amountTokenDesired = input2 !== undefined ? ethers.utils.parseEther(input2) : undefined\n    const amountTokenMin = '0'\n    const amountETHMin = '0'\n    const to = account // Send to myself\n    const deadline = Math.floor(Date.now() / 1000) + 60 * 20 // 20 minutes from the current Unix time\n\n    if(tokenAContract !== undefined)\n        tokenAContract.allowance(account, ROUTER_ADDRESS)\n            .then(result => {\n                if( ethers.utils.formatEther(result) >= ethers.utils.formatEther(MaxUint256.div(100)))\n                    !approvedA && setApprovedA(true)\n            })\n    else\n        !approvedA && setApprovedA(true)\n\n    if(tokenBContract !== undefined)\n        tokenBContract.allowance(account, ROUTER_ADDRESS)\n            .then(result => {\n                if( ethers.utils.formatEther(result) >= ethers.utils.formatEther(MaxUint256.div(100)))\n                    !approvedB && setApprovedB(true)\n            })\n    else\n        !approvedB && setApprovedB(true)\n\n    function approveA() {\n        tokenAContract.approve(ROUTER_ADDRESS, MaxUint256)\n            .then((result) => {\n                setPending(true)\n                result.wait().then(() => {\n                    setPending(false)\n                    setApprovedA(true)\n                })\n            })\n    }\n\n    function approveB() {\n        tokenBContract.approve(ROUTER_ADDRESS, MaxUint256)\n            .then((result) => {\n                setPending(true)\n                result.wait().then(() => {\n                    setPending(false)\n                    setApprovedB(true)\n                })\n            })\n    }\n\n    function addLiquidity(): Promise<Pair> {\n        routerContract.addLiquidity(\n            tokenAAddress,\n            tokenBAddress,\n            amountIn,\n            amountTokenDesired,\n            '0',\n            '0',\n            to,\n            deadline,\n            {gasLimit: ethers.utils.hexlify(250000), gasPrice: ethers.utils.parseUnits('5', \"gwei\")}\n        ).then((result) => {\n            setPending(true)\n            result.wait().then(()=>{\n                tokenAContract.balanceOf(account)\n                    .then((result) => dispatch(updateTokenA(ethers.utils.formatEther(result))))\n                tokenBContract.balanceOf(account)\n                    .then((result) => dispatch(updateTokenB(ethers.utils.formatEther(result))))\n                setPending(false)\n            })\n        })\n    }\n\n    function addLiquidityETH(): Promise<Pair> {\n        routerContract.addLiquidityETH(\n            tokenAContract === undefined ? tokenBAddress : tokenAAddress,\n            amountTokenDesired,\n            amountTokenMin,\n            amountETHMin,\n            to,\n            deadline,\n            {value: amountIn, gasLimit: ethers.utils.hexlify(250000), gasPrice: ethers.utils.parseUnits('5', \"gwei\")}\n        ).then((result) => {\n                setPending(true)\n                result.wait().then( () => {\n                    if(tokenAContract === undefined){\n                        tokenBContract.balanceOf(account)\n                            .then((result) => dispatch(updateTokenB(ethers.utils.formatEther(result))))\n                        library.getBalance(account)\n                            .then((result) => dispatch(updateTokenA(ethers.utils.formatEther(result))))\n                    } else {\n                        tokenAContract.balanceOf(account)\n                            .then((result) => dispatch(updateTokenA(ethers.utils.formatEther(result))))\n                        library.getBalance(account)\n                            .then((result) => dispatch(updateTokenB(ethers.utils.formatEther(result))))\n                    }\n                    setPending(false)\n                })\n            })\n    }\n\n    const onClick = tokenAContract === undefined || tokenBContract === undefined ? addLiquidityETH : addLiquidity\n\n    function inputOnChange(e){\n        if(e.target.value.length !== 0)\n            dispatch(updateAddInput(e.target.value))\n        else\n            dispatch(updateAddInput('0'))\n    }\n\n    function inputOnChange2(e){\n        if(e.target.value.length !== 0)\n            dispatch(updateAddInput2(e.target.value))\n        else\n            dispatch(updateAddInput2('0'))\n    }\n\n    return (\n        <BorderWrap>\n            <HeaderText>\n                유동성 공급\n            </HeaderText>\n            { !pending ? (\n                <>\n                    <form>\n                        <label>\n                            <Text>\n                                Token A Input :\n                                <input type=\"text\" onChange={inputOnChange}/>\n                            </Text>\n                        </label>\n                    </form>\n                    <form>\n                        <label>\n                            <Text>\n                                Token B Input :\n                                <input type=\"text\" onChange={inputOnChange2}/>\n                            </Text>\n                        </label>\n                    </form>\n                    { approvedA && approvedB ? (\n                        <button style={{color:\"green\"}} type=\"button\" onClick={onClick}>\n                            Add Liquidity\n                        </button>\n                    ):(\n                        approvedA ?\n                            <button style={{color:\"red\"}} type=\"button\" onClick={approveB}>\n                                Approve B\n                            </button>\n                            : approvedB ?\n                            <button style={{color:\"red\"}} type=\"button\" onClick={approveA}>\n                                Approve A\n                            </button> :\n                            <>\n                                <button style={{color:\"red\"}} type=\"button\" onClick={approveA}>\n                                    Approve A\n                                </button>\n                                <button style={{color:\"red\"}} type=\"button\" onClick={approveB}>\n                                    Approve B\n                                </button>\n                            </>\n                    )\n                    }\n                </>\n            ) : (\n                <button style={{color:\"pink\"}}>\n                    Pending...\n                </button>\n            )}\n        </BorderWrap>\n    )\n}\n\n\nexport default AddLiquidityButton\n\n","import React, {useState} from \"react\";\nimport {useWeb3React} from \"@web3-react/core\";\nimport { ethers } from 'ethers'\nimport { Pair } from \"@uniswap/sdk\"\nimport {ROUTER_ADDRESS} from \"../constant\";\nimport {updateTokenA, updateTokenB} from \"../actions\";\nimport {useDispatch} from \"react-redux\";\nimport {BorderWrap, HeaderText} from \"./style\";\nimport {MaxUint256} from \"@ethersproject/constants\";\nimport {usePairContract, useRouterContract, useTokenAddress, useTokenBalance, useTokenContract} from \"../hooks\";\n\nfunction RemoveLiquidityButton() {\n    const dispatch = useDispatch()\n\n    const { account, library } = useWeb3React()\n    const { LPBalance } = useTokenBalance()\n    const { tokenAAddress, tokenBAddress } = useTokenAddress()\n    const { pairTokenContract } = usePairContract()\n    const { tokenAContract, tokenBContract } = useTokenContract()\n    const { routerContract } = useRouterContract()\n\n    const [pending, setPending] = useState(false)\n    const [approved, setApproved] = useState(false)\n\n    pairTokenContract.allowance(account, ROUTER_ADDRESS)\n        .then(result => {\n            if( ethers.utils.formatEther(result) >= ethers.utils.formatEther(MaxUint256.div(100)) )\n                !approved && setApproved(true)\n        })\n\n    function approve() {\n        pairTokenContract.approve(ROUTER_ADDRESS, MaxUint256)\n            .then((result) => {\n                setPending(true)\n                result.wait().then(() => {\n                    setPending(false)\n                    setApproved(true)\n                })\n            })\n    }\n\n    const liquidity = ethers.utils.parseEther(LPBalance)\n    const amountTokenMin = '0'\n    const amountETHMin = '0'\n    const to = account // Send to myself\n    const deadline = Math.floor(Date.now() / 1000) + 60 * 20 // 20 minutes from the current Unix time\n\n    function removeLiquidity(): Promise<Pair> {\n        routerContract.removeLiquidity(\n            tokenAAddress,\n            tokenBAddress,\n            liquidity,\n            '0',\n            '0',\n            to,\n            deadline\n        ).then((result)=> {\n            setPending(true)\n            result.wait().then(()=>{\n                tokenAAddress.balanceOf(account)\n                    .then((result) => dispatch(updateTokenA(ethers.utils.formatEther(result))))\n                tokenBAddress.balanceOf(account)\n                    .then((result) => dispatch(updateTokenB(ethers.utils.formatEther(result))))\n                setPending(false)\n            })\n        })\n    }\n\n    function removeLiquidityETH(): Promise<Pair> {\n        routerContract.removeLiquidityETH(\n            tokenAContract === undefined ? tokenBAddress : tokenAAddress,\n            liquidity,\n            amountTokenMin,\n            amountETHMin,\n            to,\n            deadline,\n            {gasLimit: ethers.utils.hexlify(250000), gasPrice: ethers.utils.parseUnits('5', \"gwei\")}\n        ).then((result) => {\n                setPending(true)\n                result.wait().then( () => {\n                    if(tokenAContract === undefined){\n                        tokenBContract.balanceOf(account)\n                            .then((result) => dispatch(updateTokenB(ethers.utils.formatEther(result))))\n                        library.getBalance(account)\n                            .then((result) => dispatch(updateTokenA(ethers.utils.formatEther(result))))\n                    } else {\n                        tokenAContract.balanceOf(account)\n                            .then((result) => dispatch(updateTokenA(ethers.utils.formatEther(result))))\n                        library.getBalance(account)\n                            .then((result) => dispatch(updateTokenB(ethers.utils.formatEther(result))))\n                    }\n                    setPending(false)\n                })\n            })\n    }\n\n    const onClick = tokenAContract === undefined || tokenBContract === undefined ? removeLiquidityETH : removeLiquidity\n\n    return (\n        <BorderWrap>\n            <HeaderText>\n                유동성 제거\n            </HeaderText>\n            { !pending ?  (approved ? (\n                <button style={{color:\"green\"}} type=\"button\" onClick={onClick}>\n                    Remove Liquidity\n                </button>\n            ) : (\n                <button style={{color:\"red\"}} type=\"button\" onClick={approve}>\n                    Approve\n                </button>\n            )) : (\n                <button style={{color:\"pink\"}} >\n                    Pending...\n                </button>\n            )}\n        </BorderWrap>\n    )\n}\n\n\nexport default RemoveLiquidityButton\n\n","import React from \"react\";\nimport {useWeb3React} from \"@web3-react/core\";\nimport {injectedConnector} from \"../connector/connector\";\nimport {Text, Wrap} from \"./style\";\nimport Account from \"./Account\";\nimport Swap from \"./Swap\";\nimport AddLiquidityButton from \"./AddLiquidity\";\nimport RemoveLiquidityButton from \"./RemoveLiquidity\";\nimport {useTabs, useTokenAddress} from \"../hooks\";\n\nfunction Main() {\n    const { library, activate } = useWeb3React()\n\n    const { tokenAAddress, tokenBAddress } = useTokenAddress()\n\n    const contentList = [\n        { tab: \"Swap\", content: <Swap/> },\n        { tab: \"Add\", content: <AddLiquidityButton/> },\n        { tab: \"Remove\", content: <RemoveLiquidityButton/> }\n    ]\n\n    const { contentItem, contentChange } = useTabs(0, contentList)\n\n    const onClick = function () {\n        activate(injectedConnector)\n    }\n\n    return (\n        <>\n            <Text style={{fontSize: '30px', marginTop:\"30px\"}}>\n                Dong Chang Swap\n            </Text>\n            {library ? (\n                <Wrap style={{gap:\"30px\"}}>\n                    <Account/>\n                    <div style={{width:\"100%\"}}>\n                        { tokenAAddress !== \"\" && tokenBAddress !== \"\" ? (\n                            <div style={{display:\"flex\", flexDirection:\"column\"}}>\n                                <div style={{alignItems:\"center\", display:\"flex\"}}>\n                                    {contentList.map((section, index) => {\n                                    return(\n                                        <button style={{flexGrow:\"1\"}} onClick={() => contentChange(index)}>\n                                            {section.tab}\n                                        </button>\n                                    )})}\n                                </div>\n                                <div>{contentItem.content}</div>\n                            </div>\n                        ) : (<></>)  }\n                    </div>\n                </Wrap>\n            ) : (\n                <button type=\"button\" onClick={onClick}>\n                    Connect\n                </button>\n            )}\n        </>\n    )\n}\n\nexport default Main","import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n\nexport default Column\n","import React from 'react'\nimport Main from \"./components/Main\";\nimport {AutoColumn} from \"./components/Column\";\nimport styled from 'styled-components'\n\nconst Wrap = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: center;\n  font-family: 'Spoqa Han Sans Neo', serif;\n`\n\nfunction App() {\n    return (\n        <Wrap>\n            <AutoColumn gap={\"lg\"}>\n                <Main />\n            </AutoColumn>\n        </Wrap>\n    )\n}\n\nexport default App","import {\n    UPDATE_TOKEN_A,\n    UPDATE_TOKEN_B,\n    UPDATE_LP,\n    UPDATE_SWAP_OUTPUT,\n    UPDATE_SWAP_INPUT,\n    UPDATE_SWAP_EXPECT,\n    UPDATE_ADD_INPUT_2,\n    UPDATE_ADD_INPUT,\n    UPDATE_TOKEN_B_ADDRESS,\n    UPDATE_TOKEN_A_ADDRESS\n} from \"../constant/action-types\";\n\nconst initialState = {\n    tokenABalance: \"0\",\n    tokenBBalance: \"0\",\n    LPBalance: \"0\",\n    swapInput: \"0\",\n    swapOutput: \"0\",\n    swapExpect: \"0\",\n    addInput: \"0\",\n    addInput2: \"0\",\n    tokenAAddress: \"\",\n    tokenBAddress: \"\"\n}\n\nconst rootReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case UPDATE_TOKEN_A:\n            return {...state, tokenABalance : action.tokenABalance}\n        case UPDATE_TOKEN_B:\n            return {...state, tokenBBalance : action.tokenBBalance}\n        case UPDATE_LP:\n            return {...state, LPBalance : action.LPBalance}\n        case UPDATE_SWAP_INPUT:\n            return {...state, swapInput : action.swapInput}\n        case UPDATE_SWAP_OUTPUT:\n            return {...state, swapOutput : action.swapOutput}\n        case UPDATE_SWAP_EXPECT:\n            return {...state, swapExpect: action.swapExpect}\n        case UPDATE_ADD_INPUT_2:\n            return {...state, addInput2: action.addInput2}\n        case UPDATE_ADD_INPUT:\n            return {...state, addInput: action.addInput}\n        case UPDATE_TOKEN_A_ADDRESS:\n            return {...state, tokenAAddress: action.tokenAAddress}\n        case UPDATE_TOKEN_B_ADDRESS:\n            return {...state, tokenBAddress: action.tokenBAddress}\n        default:\n            return state\n    }\n}\n\nexport default rootReducer","import { createStore } from \"redux\";\nimport rootReducer from \"../reducers\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst store = createStore(rootReducer, composeWithDevTools())\n\nexport default store","import { Web3Provider } from \"@ethersproject/providers\";\n\nfunction getLibrary(provider: any): Web3Provider {\n    const library = new Web3Provider(provider)\n    library.pollingInterval = 12000\n    return library\n}\n\nexport default getLibrary","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport store from \"./store\";\nimport {Web3ReactProvider} from \"@web3-react/core\";\nimport getLibrary from \"./library/library\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Provider store={store}>\n          <App />\n      </Provider>\n    </Web3ReactProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}